package io.mosip.vercred.vcverifier.credentialverifier.types

import android.os.Build
import android.util.Log
import io.mockk.clearAllMocks
import io.mockk.every
import io.mockk.mockkObject
import io.mockk.mockkStatic
import io.mosip.vercred.vcverifier.utils.BuildConfig
//import org.junit.After
//import org.junit.Assert.*
//import org.junit.Before
//import org.junit.Test

class MsoMdocCredentialVerifierTest {

//    @Before
    fun setUp() {
        mockkObject(BuildConfig)
        every { BuildConfig.getVersionSDKInt() } returns Build.VERSION_CODES.O

        mockkStatic(Log::class)
        every { Log.e(any(), any()) } returns 0
        every { Log.e(any(), any(), any()) } returns 0
        every { Log.i(any(), any()) } returns 0
        every { Log.w(any(), any<String>()) } returns 0
    }

//    @After
    fun after() {
        clearAllMocks()
    }

//    @Test
    fun `should return true when credential is successfully verified`() {
        val isVerified = MsoMdocCredentialVerifier().verify(
            "omdkb2NUeXBldW9yZy5pc28uMTgwMTMuNS4xLm1ETGxpc3N1ZXJTaWduZWSiamlzc3VlckF1dGiEQ6EBJqEYIYJZAcMwggG_MIIBZaADAgECAhRCKow71pJM9Bysr5LXdyfbtrFmJjAKBggqhkjOPQQDAjBOMQswCQYDVQQGEwJDQTELMAkGA1UECAwCQ0ExCzAJBgNVBAcMAkNBMQswCQYDVQQKDAJDQTELMAkGA1UECwwCQ0ExCzAJBgNVBAMMAkNBMB4XDTI0MTAwODAyMjAyM1oXDTI1MTAwODAyMjAyM1owTjELMAkGA1UEBhMCQ0ExCzAJBgNVBAgMAkNBMQswCQYDVQQHDAJDQTELMAkGA1UECgwCQ0ExCzAJBgNVBAsMAkNBMQswCQYDVQQDDAJDQTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKKo-9W6QqMYOCc8S_8wZ3GI-dJ8HvyDpbFmnIqE2KOXjY-zdYWiDkVYNAXkDn69PpJf26Sn9xl-aZtSMDCUStijITAfMB0GA1UdDgQWBBTc-kzKAL373VSSxYxT37fEeCpBZjAKBggqhkjOPQQDAgNIADBFAiB-8NSnQ_fjMkofVASvcBX8QuV7sQy_-7m9zLHOIZMRZwIhAJbcjRmTaw0o6xYrQ4MRR2vp6yzS3GIyOAROuUKAl_MyWQHkMIIB4DCCAYWgAwIBAgIUNAyBG3l9C9i9g2ftVQgKQCMt80IwCgYIKoZIzj0EAwIwXjELMAkGA1UEBhMCSU4xEjAQBgNVBAgMCUthcm5hdGFrYTEMMAoGA1UEBwwDQkxSMQ4wDAYDVQQKDAVNb3NpcDEOMAwGA1UECwwFTW9zaXAxDTALBgNVBAMMBEluamkwHhcNMjQxMDA4MDE0NTIxWhcNMjUxMDA4MDE0NTIxWjBeMQswCQYDVQQGEwJJTjESMBAGA1UECAwJS2FybmF0YWthMQwwCgYDVQQHDANCTFIxDjAMBgNVBAoMBU1vc2lwMQ4wDAYDVQQLDAVNb3NpcDENMAsGA1UEAwwESW5qaTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGKT12NgO8w9oexKjoi3okFnNi9YsuyvgPtZpksCBxR6uhS2QTKyzN3AqUXxuFMUkm0W0C_JfenzcNcWqSVaJvajITAfMB0GA1UdDgQWBBSNXmrNJHKcTA4TysqmqN_ZpTRwHTAKBggqhkjOPQQDAgNJADBGAiEA4xfB7-Jbxqg_V_ixz3OtOaaWzibEVpHL_Az9f623pEoCIQCXwQN_rbmZ2S0nNC_CnV8ieEmvV1Q_THf6b4dph425DFkCUdgYWQJMpmd2ZXJzaW9uYzEuMG9kaWdlc3RBbGdvcml0aG1nU0hBLTI1Nmdkb2NUeXBldW9yZy5pc28uMTgwMTMuNS4xLm1ETGx2YWx1ZURpZ2VzdHOhcW9yZy5pc28uMTgwMTMuNS4xqAJYIEixXZ_-E9yTjWUbkjaCGxKGeCfLNZoHSobkL8L30uohBlggKwWUZWvrPt3dy93YqlsVsTEXARQNyP_BLVK02EUd0XUDWCBVrZH4oaSdWTAuZTiF_q77fwG7udPL8JMCOWci0DLv8AFYIFwCmdkT24wJi1w5tdISMUk9C1SWO7JKbVyRDlZkJTvfBFggEFc5QvLxSnI-vzOrwuUH7pnp8tZ7CPHJwTInoZOJdS4AWCARB4SiHDX9GcIHEzhbyKqH8nPBvXWRuNiIsp2YbZ4fAQdYIJsxWQHt457tQhIEdW3MJUVKPuO7CvIE2TEN-Gs81yT3BVggV1IR-nijfdOjUUIxjvHrG_x9-AiqdvsRZkBzYAVorzFtZGV2aWNlS2V5SW5mb6FpZGV2aWNlS2V5pAECIAEhWCBJ7VdAVSSjd3iuZHAV-gXv9TognMcNI83WRm1fZoj0KCJYIBnN2Kg9je4MUSL1qBn8N5GWg4VtM9YSkMdHns15vVAnbHZhbGlkaXR5SW5mb6Nmc2lnbmVkwHQyMDI0LTEwLTE0VDA5OjU2OjU5Wml2YWxpZEZyb23AdDIwMjQtMTAtMTRUMDk6NTY6NTlaanZhbGlkVW50aWzAdDIwMjQtMTEtMTlUMTg6MzA6MDBaWECFoYANMlXvOGgROhIfigf-YDy5fTXjPt9at9poxRCVhf0u_CfhFaWX-rVNEt4nbIQW7uwFbrevNTTPmelDAR0xam5hbWVTcGFjZXOhcW9yZy5pc28uMTgwMTMuNS4xiNgYWFWkaGRpZ2VzdElEAmZyYW5kb21QbYUstb5qYaqaDGEXvWdD53FlbGVtZW50SWRlbnRpZmllcmtmYW1pbHlfbmFtZWxlbGVtZW50VmFsdWVmQWdhdGhh2BhYVKRoZGlnZXN0SUQGZnJhbmRvbVDcl4VzmY5oXohcs2H4bJdGcWVsZW1lbnRJZGVudGlmaWVyamdpdmVuX25hbWVsZWxlbWVudFZhbHVlZkpvc2VwaNgYWIGkaGRpZ2VzdElEA2ZyYW5kb21QIL6_sBEAsnZUVxjDD0BsyHFlbGVtZW50SWRlbnRpZmllcmpiaXJ0aF9kYXRlbGVsZW1lbnRWYWx1ZVgyrO0ABXNyAA1qYXZhLnRpbWUuU2VylV2EuhsiSLIMAAB4cHcNAgAAAAA5hMGAAAAAAHjYGFhqpGhkaWdlc3RJRAFmcmFuZG9tUOOhiP_xEFnrb7zmJlXfvW9xZWxlbWVudElkZW50aWZpZXJqaXNzdWVfZGF0ZWxlbGVtZW50VmFsdWV4GzIwMjQtMTAtMTRUMDk6NTY6NTkuMzk5ODE2WtgYWGukaGRpZ2VzdElEBGZyYW5kb21Qg7iWcNbZ-b9S2D3u3Av2YnFlbGVtZW50SWRlbnRpZmllcmtleHBpcnlfZGF0ZWxlbGVtZW50VmFsdWV4GzIwMjQtMTAtMjZUMDk6NTY6NTkuMzk5ODE2WtgYWFmkaGRpZ2VzdElEAGZyYW5kb21QBYNczBataC2MR4om9FAnmHFlbGVtZW50SWRlbnRpZmllcm9pc3N1aW5nX2NvdW50cnlsZWxlbWVudFZhbHVlZklzbGFuZNgYWFSkaGRpZ2VzdElEB2ZyYW5kb21QSVmbVt1TszUaVytA8n9y03FlbGVtZW50SWRlbnRpZmllcm9kb2N1bWVudF9udW1iZXJsZWxlbWVudFZhbHVlGHvYGFkBUaRoZGlnZXN0SUQFZnJhbmRvbVB_NHtdmXkWLPqVnSgypGGWcWVsZW1lbnRJZGVudGlmaWVycmRyaXZpbmdfcHJpdmlsZWdlc2xlbGVtZW50VmFsdWVY-qztAAVzcgAXamF2YS51dGlsLkxpbmtlZEhhc2hNYXA0wE5cEGzA-wIAAVoAC2FjY2Vzc09yZGVyeHIAEWphdmEudXRpbC5IYXNoTWFwBQfawcMWYNEDAAJGAApsb2FkRmFjdG9ySQAJdGhyZXNob2xkeHA_QAAAAAAABncIAAAACAAAAAN0ABV2ZWhpY2xlX2NhdGVnb3J5X2NvZGV0AAFBdAAKaXNzdWVfZGF0ZXQAGzIwMjQtMTAtMTRUMDk6NTY6NTkuMzk5ODE2WnQAC2V4cGlyeV9kYXRldAAbMjAyNC0xMC0yNlQwOTo1Njo1OS4zOTk4MTZaeAA="
        )

//        assertTrue(isVerified)
    }
}