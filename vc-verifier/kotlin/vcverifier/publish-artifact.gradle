apply plugin: 'maven-publish'
apply plugin: 'signing'

// ======= SUPPORTING TASKS =======
task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

// ======= PUBLISHING CONFIGURATION =======
publishing {
    repositories {
        maven {
            name = "sonatype"
            // Correct URLs with conditional selection
            url = version.endsWith("SNAPSHOT")
                    ? "https://central.sonatype.com/repository/maven-snapshots/"
                    : "https://central.sonatype.com/api/v1/publish"  // Fixed URL

            // ADD THIS AUTHENTICATION BLOCK
            authentication {
                basic(BasicAuthentication)
            }

            credentials {
                username = System.getenv("OSSRH_USER")
                password = System.getenv("OSSRH_SECRET")
            }
        }
    }

    publications {
        // For Java library (JAR)
        java(MavenPublication) {
            groupId = "io.mosip"
            artifactId = "vcverifier"
            version = "1.3.0-rc1"

            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom {
                name = "vcverifier"
                description = "Kotlin library to generate QR code from VC and decode the data"
                url = "https://github.com/mosip/vc-verifier"

                licenses {
                    license {
                        name = "MIT"
                        url = "https://www.mit.edu/~amini/LICENSE.md"
                    }
                }

                developers {
                    developer {
                        name = "Mosip"
                        email = "mosip.emailnotifier@gmail.com"
                        organization = "io.mosip"
                        organizationUrl = "https://github.com/mosip/vc-verifier"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/mosip/vc-verifier.git"
                    developerConnection = "scm:git:ssh://github.com:mosip/vc-verifier.git"
                    url = "https://github.com/mosip/vc-verifier"
                }

                // Dependencies
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each {
                        // Skip project dependencies
                        if (it.group == null || it.version == null || it.name == null) return

                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }

        // For Android library (AAR) - if you're actually building an AAR
        // You'll need to adapt this section if you're building Android artifacts
        aar(MavenPublication) {
            groupId = "io.mosip"
            artifactId = "vcverifier-android"
            version = "1.3.0-rc1"

            // This assumes you have an AAR file built somewhere
            // You'll need to point to the actual AAR file location
            artifact("path/to/your/artifact.aar") {
                classifier = "android"
                extension = "aar"
            }

            artifact sourcesJar
            artifact javadocJar

            pom {
                name = "vcverifier-android"
                description = "Android library to generate QR code from VC and decode the data"
                url = "https://github.com/mosip/vc-verifier"

                licenses {
                    license {
                        name = "MPL-2.0"
                        url = "https://www.mozilla.org/en-US/MPL/2.0/"
                    }
                }

                developers {
                    developer {
                        name = "Mosip"
                        email = "mosip.emailnotifier@gmail.com"
                        organization = "io.mosip"
                        organizationUrl = "https://github.com/mosip/vc-verifier"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/mosip/vc-verifier.git"
                    developerConnection = "scm:git:ssh://github.com:mosip/vc-verifier.git"
                    url = "https://github.com/mosip/vc-verifier"
                }

                // Dependencies
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each {
                        // Skip project dependencies
                        if (it.group == null || it.version == null || it.name == null) return

                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

// ======= SIGNING CONFIGURATION =======
signing {
    useGpgCmd()
    sign publishing.publications.java
    sign publishing.publications.aar
}

// Ensure build tasks run before publishing
tasks.withType(PublishToMavenRepository) {
    dependsOn build
    dependsOn sourcesJar
    dependsOn javadocJar
}