publishing {
    repositories {
        maven {
            def releasesRepoUrl = 'https://central.sonatype.com/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://central.sonatype.com/repository/maven-snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            name = 'vcverifier'
            credentials {
                username = System.getenv('OSSRH_USER')
                password = System.getenv('OSSRH_SECRET')
            }
        }
    }
    publications {
        aar(MavenPublication) {
            groupId = 'io.mosip'
            artifactId = 'vcverifier-aar'
            version = '1.3.0-rc1' // Or use project.version if defined elsewhere
            artifact("build/outputs/aar/vcverifier-aar-${version}-release.aar")
            pom {
                withXml {
                    // Your existing POM configuration
                    def dependenciesNode = asNode().appendNode('dependencies')
                    project.configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                    asNode().appendNode('name', 'vcverifier')
                    asNode().appendNode('url', 'https://github.com/mosip/vc-verifier')
                    asNode().appendNode('description', 'Kotlin library to generate QR code from VC and decode the data')
                    asNode().appendNode('licenses').appendNode('license').with {
                        appendNode('name', 'MPL-2.0')
                        appendNode('url', 'https://www.mozilla.org/en-US/MPL/2.0/')
                    }
                    asNode().appendNode('scm').with {
                        appendNode('connection', 'scm:git:git://github.com/mosip/vc-verifier.git')
                        appendNode('developerConnection', 'scm:git:ssh://github.com:mosip/vc-verifier.git')
                        appendNode('url', 'https://github.com/mosip/vc-verifier')
                        appendNode('tag', 'HEAD')
                    }
                    asNode().appendNode('developers').appendNode('developer').with {
                        appendNode('name', 'Mosip')
                        appendNode('email', 'mosip.emailnotifier@gmail.com')
                        appendNode('organization', 'io.mosip')
                        appendNode('organizationUrl', 'https://github.com/mosip/vc-verifier')
                    }
                }
            }
        }
        jarRelease(MavenPublication) {
            groupId = 'io.mosip'
            artifactId = 'vcverifier-jar'
            version = '1.3.0-rc1'
            artifact(tasks.named('jarRelease').get())
            artifact(tasks.named('javadocJar').get())
            artifact(tasks.named('sourcesJar').get())
            pom {
                withXml {
                    // Your existing POM configuration for jarRelease
                    def dependenciesNode = asNode().appendNode('dependencies')
                    project.configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                    asNode().appendNode('name', 'vcverifier')
                    asNode().appendNode('url', 'https://github.com/mosip/vc-verifier')
                    asNode().appendNode('description', 'Kotlin library to generate QR code from VC and decode the data')
                    asNode().appendNode('licenses').appendNode('license').with {
                        appendNode('name', 'MIT')
                        appendNode('url', 'https://www.mit.edu/~amini/LICENSE.md')
                    }
                    asNode().appendNode('scm').with {
                        appendNode('connection', 'scm:git:git://github.com/mosip/vc-verifier.git')
                        appendNode('developerConnection', 'scm:git:ssh://github.com:mosip/vc-verifier.git')
                        appendNode('url', 'https://github.com/mosip/vc-verifier')
                        appendNode('tag', 'HEAD')
                    }
                    asNode().appendNode('developers').appendNode('developer').with {
                        appendNode('name', 'Mosip')
                        appendNode('email', 'mosip.emailnotifier@gmail.com')
                        appendNode('organization', 'io.mosip')
                        appendNode('organizationUrl', 'https://github.com/mosip/vc-verifier')
                    }
                }
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.aar
    sign publishing.publications.jarRelease
}