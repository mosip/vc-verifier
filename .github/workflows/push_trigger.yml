name: Maven Package upon a push 

on:
  push:
    branches:
      - '!release-branch'
      - release-1*
      - master
      - 1.*
      - develop
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        ref: ${{ github.ref }}
        java-version: 11
        server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup branch and env
      run: |
        # Strip git ref prefix from version
        echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV
        echo "GPG_TTY=$(tty)" >> $GITHUB_ENV

    - name: Setup branch and GPG public key 
      run: |
        # Strip git ref prefix from version
        echo ${{ env.BRANCH_NAME }}
        echo ${{ env.GPG_TTY }}
        sudo apt-get --yes install gnupg2
        gpg2 --import ./.github/keys/mosipgpgkey_pub.gpg 
        gpg2 --quiet --batch --passphrase=${{secrets.gpg_secret}}  --allow-secret-key-import --import ./.github/keys/mosipgpgkey_sec.gpg

    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-${{ env.BRANCH_NAME }}

    - name: Setup the settings file for ossrh server
      run: echo "<settings>   <servers>      <server>        <id>ossrh</id>          <username>${{secrets.ossrh_user}}</username>          <password>${{secrets.ossrh_secret}}</password>       </server>    </servers>    <profiles>       <profile>          <id>ossrh</id>          <activation>             <activeByDefault>true</activeByDefault>          </activation>          <properties>             <gpg.executable>gpg2</gpg.executable>             <gpg.passphrase>${{secrets.gpg_secret}}</gpg.passphrase>          </properties>       </profile>       <profile>          <id>allow-snapshots</id>          <activation>             <activeByDefault>true</activeByDefault>          </activation>          <repositories>             <repository>                <id>snapshots-repo</id>                <url>https://oss.sonatype.org/content/repositories/snapshots</url>                <releases>                   <enabled>false</enabled>                </releases>                <snapshots>                   <enabled>true</enabled>                </snapshots>             </repository>             <repository>                <id>releases-repo</id>                <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>                <releases>                   <enabled>true</enabled>                </releases>                <snapshots>                   <enabled>false</enabled>                </snapshots>             </repository>             <repository>                <id>danubetech-maven-public</id>                <url>https://repo.danubetech.com/repository/maven-public</url>             </repository>          </repositories>       </profile>       <profile>          <id>sonar</id>          <properties>             <sonar.sources>.</sonar.sources>             <sonar.host.url>https://sonarcloud.io</sonar.host.url>          </properties>          <activation>             <activeByDefault>false</activeByDefault>          </activation>       </profile>    </profiles> </settings>" > $GITHUB_WORKSPACE/settings.xml

    - name: Build with Maven
      run: |
        cd vc-verifier && mvn -B package -s $GITHUB_WORKSPACE/settings.xml --file pom.xml

    - name: Publish the maven package
      run: |
        cd vc-verifier && mvn deploy  -DaltDeploymentRepository=ossrh::default::${{ secrets.OSSRH_SNAPSHOT_URL }} -s $GITHUB_WORKSPACE/settings.xml -f pom.xml
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        GPG_TTY: $(tty)
        
    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEVOPS_WEBHOOK }} # required
      if: failure() # Pick up events even if the job fails or is canceled.

  build-maven-vc-verifier:
    uses: mosip/kattu/.github/workflows/maven-build.yml@master-java21
    with:
      SERVICE_LOCATION: vc-verifier/java
      BUILD_ARTIFACT: vc-verifier
    secrets:
      OSSRH_USER: ${{ secrets.OSSRH_USER }}
      OSSRH_SECRET: ${{ secrets.OSSRH_SECRET }}
      OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
      GPG_SECRET: ${{ secrets.GPG_SECRET }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}


  publish_to_nexus:
    if: "${{ !contains(github.ref, 'master') && github.event_name != 'pull_request' &&  github.event_name == 'workflow_dispatch' }}"
    needs: build-maven-vc-verifier
    uses: mosip/kattu/.github/workflows/maven-publish-to-nexus.yml@master-java21
    with:
      SERVICE_LOCATION: vc-verifier/java
    secrets:
      OSSRH_USER: ${{ secrets.OSSRH_USER }}
      OSSRH_SECRET: ${{ secrets.OSSRH_SECRET }}
      OSSRH_URL: ${{ secrets.OSSRH_SNAPSHOT_URL }}
      OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
      GPG_SECRET: ${{ secrets.GPG_SECRET }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}


  sonar_analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          ref: ${{ github.ref }}
          java-version: 11
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Setup branch and env
        run: |
          # Strip git ref prefix from version
          echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV
          echo "GPG_TTY=$(tty)" >> $GITHUB_ENV
          
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ env.BRANCH_NAME }}
            
      - name: Setup the settings file for ossrh server
        run: echo "<settings>   <servers>      <server>        <id>ossrh</id>          <username>${{secrets.ossrh_user}}</username>          <password>${{secrets.ossrh_secret}}</password>       </server>    </servers>    <profiles>       <profile>          <id>ossrh</id>          <activation>             <activeByDefault>true</activeByDefault>          </activation>          <properties>             <gpg.executable>gpg2</gpg.executable>             <gpg.passphrase>${{secrets.gpg_secret}}</gpg.passphrase>          </properties>       </profile>       <profile>          <id>allow-snapshots</id>          <activation>             <activeByDefault>true</activeByDefault>          </activation>          <repositories>             <repository>                <id>snapshots-repo</id>                <url>https://oss.sonatype.org/content/repositories/snapshots</url>                <releases>                   <enabled>false</enabled>                </releases>                <snapshots>                   <enabled>true</enabled>                </snapshots>             </repository>             <repository>                <id>releases-repo</id>                <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>                <releases>                   <enabled>true</enabled>                </releases>                <snapshots>                   <enabled>false</enabled>                </snapshots>             </repository>             <repository>                <id>danubetech-maven-public</id>                <url>https://repo.danubetech.com/repository/maven-public</url>             </repository>          </repositories>       </profile>       <profile>          <id>sonar</id>          <properties>             <sonar.sources>.</sonar.sources>             <sonar.host.url>https://sonarcloud.io</sonar.host.url>          </properties>          <activation>             <activeByDefault>false</activeByDefault>          </activation>       </profile>    </profiles> </settings>" > $GITHUB_WORKSPACE/settings.xml

      - name: Build with Maven
        run: |
          cd vc-verifier && mvn -B package -s $GITHUB_WORKSPACE/settings.xml --file pom.xml

      - name: Analyze with SonarCloud
        run: |
          cd vc-verifier && mvn -B -Dgpg.skip verify sonar:sonar -Dsonar.projectKey=mosip_${{ github.event.repository.name }} -Dsonar.organization=${{ secrets.ORG_KEY }} -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,workflow,job # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEVOPS_WEBHOOK }} # required
        if: failure() # Pick up events even if the job fails or is canceled.
